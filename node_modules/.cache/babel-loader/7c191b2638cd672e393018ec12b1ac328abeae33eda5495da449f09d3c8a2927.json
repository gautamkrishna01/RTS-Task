{"ast":null,"code":"var _jsxFileName = \"/home/krishna/Desktop/Practice/RealTimeSolution/tms-project/src/Components/Home.js\";\nimport React from \"react\";\nimport record from \"./db.json\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"2px solid black\",\n        width: \"50%\",\n        height: \"50vh\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            borderLeft: \"2px solid black\",\n            height\n          },\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), record.map(value => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), record.map(val => {\n        if (val.name === \"Air Temperature\") {\n          return val.data.map(temp => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: temp.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 22\n            }, this);\n          });\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        left: \"37%\",\n        bottom: \"435px\"\n      },\n      children: [\" \", record.map((val, index) => {\n        if (val.name === \"Air Temperature\") {\n          return val.data.map(temp => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: temp.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 22\n            }, this);\n          });\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        left: \"50%\",\n        bottom: \"600px\"\n      },\n      children: [\" \", record.map((val, index) => {\n        if (val.name === \"Relative Humidity\") {\n          return val.data.map(temp => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: temp.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 22\n            }, this);\n          });\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        left: \"60%\",\n        bottom: \"780px\"\n      },\n      children: [\" \", record.map((val, index) => {\n        if (val.name === \"Wind Speed\") {\n          return val.data.map(temp => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: temp.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 22\n            }, this);\n          });\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        left: \"70%\",\n        bottom: \"950px\"\n      },\n      children: [\" \", record.map((val, index) => {\n        if (val.name === \"Wind Direction\") {\n          return val.data.map(temp => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: temp.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 22\n            }, this);\n          });\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","record","Home","border","width","height","margin","display","justifyContent","borderLeft","map","value","name","val","data","temp","time","position","left","bottom","index"],"sources":["/home/krishna/Desktop/Practice/RealTimeSolution/tms-project/src/Components/Home.js"],"sourcesContent":["import React from \"react\";\nimport record from \"./db.json\";\nconst Home = () => {\n  \n  return (\n    <>\n      <div\n        style={{\n          border: \"2px solid black\",\n          width: \"50%\",\n          height: \"50vh\",\n          margin: \"auto\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            border: \"1px solid black\",\n          }}\n        >\n          <h4 style={{borderLeft:\"2px solid black\",height}}>Time</h4>\n          {record.map((value) => {\n            return <p>{value.name}</p>;\n          })}\n        </div>\n        {/* display time  */}\n       {record.map((val)=>\n       {\n        if(val.name===\"Air Temperature\")\n        {\n          return val.data.map((temp)=>\n            {\n              return <p>{temp.time}</p>\n            })\n        }\n       })}\n     \n      </div>\n      {/* Air Temprature  */}\n      <div style={{ position: \"relative\", left: \"37%\",bottom:\"435px\" }}> {  \n         record.map((val,index) => { \n          \n          if(val.name===\"Air Temperature\")\n          {\n            return val.data.map((temp)=>\n            {\n              return <p>{temp.value}</p>\n            })\n          }\n        })}\n      </div>\n      {/* Relative Humidity */}\n      <div style={{ position: \"relative\", left:\"50%\",bottom:\"600px\" }}> {  \n         record.map((val,index) => { \n          \n          if(val.name===\"Relative Humidity\")\n          {\n            return val.data.map((temp)=>\n            {\n              return <p>{temp.value}</p>\n            })\n          }\n        })}\n      </div>\n      {/* Wind Speed */}\n      <div style={{ position: \"relative\", left:\"60%\",bottom:\"780px\" }}> {  \n         record.map((val,index) => { \n          \n          if(val.name===\"Wind Speed\")\n          {\n            return val.data.map((temp)=>\n            {\n              return <p>{temp.value}</p>\n            })\n          }\n        })}\n      </div>\n      {/* Wind Direction' */}\n      <div style={{ position: \"relative\", left:\"70%\",bottom:\"950px\" }}> {  \n         record.map((val,index) => { \n          \n          if(val.name===\"Wind Direction\")\n          {\n            return val.data.map((temp)=>\n            {\n              return <p>{temp.value}</p>\n            })\n          }\n        })}\n      </div>\n     \n    </>\n  );\n};\n\nexport default Home;\n\n\n\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}